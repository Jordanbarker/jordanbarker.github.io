Traceback (most recent call last):
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score

def eval_classification_perf(y_true_list, y_pred_list):
    num_plots = len(y_true_list)
    fig, axes = plt.subplots(4, 4, figsize=(20, 20))
    axes = axes.flatten()
    
    for i, (y_true, y_pred) in enumerate(zip(y_true_list, y_pred_list)):
        accuracy = accuracy_score(y_true, y_pred)
        precision = precision_score(y_true, y_pred)
        recall = recall_score(y_true, y_pred)
        f1 = f1_score(y_true, y_pred)

        # Plot confusion matrix
        cm = confusion_matrix(y_true, y_pred)
        cax = axes[i].matshow(cm, cmap='Blues')
        fig.colorbar(cax, ax=axes[i], fraction=0.046, pad=0.04)
        axes[i].set_xticks([0, 1])
        axes[i].set_yticks([0, 1])
        axes[i].set_xticklabels([0, 1])
        axes[i].set_yticklabels([0, 1])

        # Choose text color based on the background
        threshold = cm.max() / 2.
        for row in range(cm.shape[0]):
            for col in range(cm.shape[1]):
                color = "white" if cm[row, col] > threshold else "black"
                axes[i].text(col, row, format(cm[row, col], 'd'), 
                             ha="center", va="center",
                             color=color)

        axes[i].set_xlabel('Predicted labels')
        axes[i].set_ylabel('True labels')
        axes[i].set_title(f'Accuracy:  {accuracy:.2f} \nPrecision:  {precision:.2f} \n Recall:      {recall:.2f} \nF1 Score:  {f1:.2f}')
        # axes[i].set_title(f'Acc: {accuracy:.2f} Prec: {precision:.2f} Rec: {recall:.2f} F1: {f1:.2f}')

    # Hide any unused subplots
    for j in range(num_plots, len(axes)):
        fig.delaxes(axes[j])

    plt.tight_layout()
    plt.show()

y_true_list = [
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

y_pred_list = [
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1],
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
]

eval_classification_perf(y_true_list, y_pred_list)

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[2], line 2[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m----> 2[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmetrics[39;00m [38;5;28;01mimport[39;00m confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
[1;32m      4[0m [38;5;28;01mdef[39;00m [38;5;21meval_classification_perf[39m(y_true_list, y_pred_list):
[1;32m      5[0m     num_plots [38;5;241m=[39m [38;5;28mlen[39m(y_true_list)

[0;31mModuleNotFoundError[0m: No module named 'sklearn'

