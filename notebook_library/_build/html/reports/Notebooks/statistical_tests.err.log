Traceback (most recent call last):
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jordanbarker/miniconda3/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import numpy as np
import scipy.stats as stats

alpha = 0.05
betas = [0.1, 0.5, 0.95]
powers = [1 - beta for beta in betas]
x = np.linspace(-4, 4, 1000)
critical_value = stats.norm.ppf(1 - alpha/2)

fig, axs = plt.subplots(1, 3, figsize=(18, 5), sharey=True)
fig.suptitle('Power of a Statistical Test', fontsize=20)
axs[0].set_ylabel('Probability Density')


for ax, beta, power in zip(axs, betas, powers):
    ax.plot(x, stats.norm.pdf(x), label='Distribution under $H_0$', color='gray')
    ax.plot(x, stats.norm.pdf(x, loc=power), label='Distribution under $H_1$', color='tab:blue')
    ax.fill_between(x, stats.norm.pdf(x), where=(x >= critical_value) | (x <= -critical_value), color='gray', alpha=0.3, label='Type I error (Î±)')
    ax.fill_between(x, stats.norm.pdf(x, loc=power), where=(x < critical_value) & (x > -critical_value), color='orange', alpha=0.3, label='Type II error (Î²)')
    ax.axvline(critical_value, color='gray', linestyle='--', label='Critical Value for Î±')
    ax.axvline(-critical_value, color='gray', linestyle='--')
    ax.text(3, 0.05, '$\\alpha/2$', horizontalalignment='center', fontsize=12)
    ax.text(-3, 0.05, '$\\alpha/2$', horizontalalignment='center', fontsize=12)
    ax.text(0, 0.02, '$1-\\alpha$', horizontalalignment='center', fontsize=12)
    ax.text(1.5, 0.1, 'Power\n$(1-\\beta)$', horizontalalignment='center', fontsize=12, color='tab:blue')
    ax.text(-1.5, 0.1, '$\\beta$', horizontalalignment='center', fontsize=12, color='orange')
    ax.set_xlabel('Test Statistic')
    ax.set_title(f'Î²={beta}, Power={power:.02f}', fontsize=14)
    ax.legend()
plt.tight_layout()
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[0;32m----> 3[0m [38;5;28;01mimport[39;00m [38;5;21;01mscipy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mstats[39;00m [38;5;28;01mas[39;00m [38;5;21;01mstats[39;00m
[1;32m      5[0m alpha [38;5;241m=[39m [38;5;241m0.05[39m
[1;32m      6[0m betas [38;5;241m=[39m [[38;5;241m0.1[39m, [38;5;241m0.5[39m, [38;5;241m0.95[39m]

[0;31mModuleNotFoundError[0m: No module named 'scipy'

