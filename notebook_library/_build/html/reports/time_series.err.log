Traceback (most recent call last):
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jordanbarker/miniconda3/envs/py311/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import torch
from torch.utils.data import DataLoader, Dataset
import torch.nn.functional as F
from pytorch_lightning import LightningModule, Trainer
from torch import nn

class TimeSeriesDataset(Dataset):
    def __init__(self, data, seq_length):
        self.data = data
        self.seq_length = seq_length

    def __len__(self):
        return len(self.data) - self.seq_length

    def __getitem__(self, idx):
        x = self.data[idx:idx + self.seq_length]
        y = self.data[idx + self.seq_length]
        return torch.tensor(x, dtype=torch.float32), torch.tensor(y, dtype=torch.float32)

class RNNModel(LightningModule):
    def __init__(self, input_size, hidden_size, output_size, seq_length):
        super(RNNModel, self).__init__()
        self.hidden_size = hidden_size
        self.seq_length = seq_length
        self.rnn = nn.RNN(input_size, hidden_size, batch_first=True)
        self.fc = nn.Linear(hidden_size, output_size)

    def forward(self, x):
        h0 = torch.zeros(1, x.size(0), self.hidden_size).to(self.device)
        out, _ = self.rnn(x, h0)
        out = self.fc(out[:, -1, :])
        return out

    def training_step(self, batch, batch_idx):
        x, y = batch
        y_hat = self(x.unsqueeze(-1))
        loss = F.mse_loss(y_hat, y.unsqueeze(-1))
        # self.log('train_loss', loss)
        return loss

    def configure_optimizers(self):
        return torch.optim.Adam(self.parameters(), lr=0.001)

def predict(model, data_loader, seq_length):
    model.eval()
    predictions = []
    with torch.no_grad():
        for x, _ in data_loader:
            x = x.unsqueeze(-1).to(model.device)
            pred = model(x)
            predictions.append(pred.item())
    return predictions

# Hyperparameters
seq_length = 20  # Number of time steps to look back
batch_size = 4 #128
hidden_size = 50
num_layers = 1
learning_rate = 0.001
num_epochs = 20

train_dataset = TimeSeriesDataset(train, seq_length)
test_dataset = TimeSeriesDataset(test, seq_length)
train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
test_loader = DataLoader(test_dataset, batch_size=1, shuffle=False)

model = RNNModel(input_size=1, hidden_size=50, output_size=1, seq_length=seq_length)
trainer = Trainer(max_epochs=20, log_every_n_steps=20)
trainer.fit(model, train_loader)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[12], line 4[0m
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtorch[39;00m[38;5;21;01m.[39;00m[38;5;21;01mutils[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdata[39;00m [38;5;28;01mimport[39;00m DataLoader, Dataset
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mtorch[39;00m[38;5;21;01m.[39;00m[38;5;21;01mnn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfunctional[39;00m [38;5;28;01mas[39;00m [38;5;21;01mF[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpytorch_lightning[39;00m [38;5;28;01mimport[39;00m LightningModule, Trainer
[1;32m      5[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtorch[39;00m [38;5;28;01mimport[39;00m nn
[1;32m      7[0m [38;5;28;01mclass[39;00m [38;5;21;01mTimeSeriesDataset[39;00m(Dataset):

[0;31mModuleNotFoundError[0m: No module named 'pytorch_lightning'

